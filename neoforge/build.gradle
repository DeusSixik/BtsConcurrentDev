plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven { url = "https://maven.createmod.net" } // Ponder, Flywheel
    maven { url = "https://maven.ithundxr.dev/snapshots" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://harleyoconnor.com/maven" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "https://maven.squiddev.cc" }
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.ftb.dev/releases" }
    maven { url = "https://maven.architectury.dev" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" }

    maven {
        url = "https://jm.gserv.me/repository/maven-public"
        content {
            includeGroup "info.journeymap"
            includeGroup "mysticdrew"
        }
    }

    maven {
        name "latviandevReleases"
        url "https://maven.latvian.dev/releases"
    }
    maven {
        name "kTT MavenReleases"
        url "https://maven.kessokuteatime.work/releases"
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"


    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

    compileOnly(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:0.3.7-beta.1"))
    include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-neoforge:0.3.7-beta.1")))

    modImplementation "curse.maven:moonrise-1096335:7089177"

    //Enchanced Visuals
    compileOnly "curse.maven:enhancedvisuals-255389:7003054"
    compileOnly "curse.maven:creativecore-257814:7002671"

    // Create
    compileOnly "curse.maven:create-328085:6641610"
    compileOnly "net.createmod.ponder:Ponder-NeoForge-${minecraft_version}:1.0.56"
    compileOnly "dev.engine-room.flywheel:flywheel-neoforge-${minecraft_version}:1.0.4"
    compileOnly "com.tterrag.registrate:Registrate:MC1.21-1.3.0+67"
    compileOnly "curse.maven:copycats-968398:6650033"

//   Can't install tiny server from Latvian (dev.latvian.apps:tiny-java-server:1.0.0-build.26)
//    modImplementation "curse.maven:ponder-622888:6690595"
//
//    //KubeJS
//    modImplementation "curse.maven:kubejs-238086:7107528"
//    modImplementation "curse.maven:rhino-416294:6886923"

    // Malum
    compileOnly "curse.maven:malum-484064:6655805"
    compileOnly "curse.maven:curios-309927:6529130"
    compileOnly "curse.maven:lodestone-616457:6630047"

    //Immersive Optimization
    compileOnly "curse.maven:immersive-optimization-1163206:6969894"

    compileOnly "curse.maven:woot-revived-1337238:7110442"
    compileOnly "curse.maven:guideme-1173950:6812025"

    compileOnly "curse.maven:iceandfire-ce-1040076:7037563"
    compileOnly "curse.maven:uranus-1010827:6979353"
    compileOnly "curse.maven:jupiter-1072905:6843052"
    compileOnly "curse.maven:architectury-api-419699:5786327"
    compileOnly "com.iafenvoy.integration:integration-neoforge:0.2"

    compileOnly "curse.maven:lithium-360438:6290413"

    compileOnly "curse.maven:terrablender-neoforge-940057:6054947"

    compileOnly "curse.maven:biolith-852512:7074761"
    compileOnly "curse.maven:natures-spirit-1044992:6962784"
    compileOnly "curse.maven:oh-the-biomes-weve-gone-1070751:7040627"

    compileOnly "curse.maven:environmental-388992:7122147"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
